// Import apiSlice from the appropriate path
import { apiSlice } from '../../app/apiSlice';

// Define the clientApi by injecting endpoints
export const clientApi = apiSlice.injectEndpoints({
  endpoints: (builder) => ({
    // Query to get all clients
    getClients: builder.query({
      query: () => '/clients/getClients',
      providesTags: ['Client'],
    }),

    // Query to get a client by ID
    getClientById: builder.query({
      query: (id) => `/clients/get-by-Id/${id}`,
      providesTags: ['Client'],
    }),

    // Mutation to register a new client
    registerClient: builder.mutation({
      query: (clientData) => ({
        url: '/clients/register',
        method: 'POST',
        body: clientData,
      }),
      invalidatesTags: ['Client'],
    }),

    // Mutation to edit an existing client
    editClient: builder.mutation({
      query: ({ id, patch }) => ({
        url: `/clients/edit/${id}`,
        method: 'PUT',
        body: patch,
      }),
      invalidatesTags: ['Client'],
    }),

    // Mutation to delete a client
    deleteClient: builder.mutation({
      query: (id) => ({
        url: `/clients/delete/${id}`,
        method: 'DELETE',
      }),
      invalidatesTags: ['Client'],
    }),
  }),
});

// Export hooks generated by clientApi
export const {
  useGetClientsQuery,
  useGetClientByIdQuery,
  useRegisterClientMutation,
  useEditClientMutation,
  useDeleteClientMutation,
} = clientApi;